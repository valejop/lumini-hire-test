head(nycflights13::weather)
weather%>%
filter(year=1,month=1,day=1)
weather%>%
filter(year=1,month=1,day=1)
weather%>%filter(year=1,month=1,day=1)
library(magrittr)
weather%>%filter(year=1,month=1,day=1)
require(tidyverse)
weather%>%filter(year=1,month=1,day=1)
weather%>%filter(year==1,month==1,day==1)
weather
weather%>%filter(year==1 & month==1 & day==1)
weather%>%filter(year==2013 & month==1 & day==1)
View(weather%>%filter(year==2013 & month==1 & day==1))
View(weather%>%filter(year==2013 & month==1 & day==2))
# Chunk 1
summary(cars)
# Chunk 2
plot(cars)
# Chunk 1
summary(cars)
# Chunk 2
plot(cars)
# Chunk 1
summary(cars)
# Chunk 2
plot(cars)
version
install.packages("installr")
installr::updateR()
install.packages("FactoMineR")
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/valej_000/Documents/Lumini/")
#Para ser reprodutível em qualquer computador, por favor escolha o diretório
#com a linha comentada abaixo.
#choose.dir()
getwd()
#####Carregar as bibliotecas utilizadas no trabalho
#install.packages(c("tidyverse","polycor","corrplot","FactoMineR")
library(corrplot)
library(polycor)
library(tidyverse)
zip <- unz("sample_data/Microdados_Enem_2016.zip",filename = "Microdados_Enem_2016.csv")
df <- read_csv(zip)
#View(df)
#summary(df)
#fix(df)
get_regiao <- function(cod){
temp=vector(mode = "character",length = length(cod))
temp[substr(cod,1,1)=="1"]="N"
temp[substr(cod,1,1)=="2"]="NE"
temp[substr(cod,1,1)=="3"]="SE"
temp[substr(cod,1,1)=="4"]="S"
temp[substr(cod,1,1)=="5"]="CO"
return(as.factor(temp))
}
df <- df%>%mutate(REGIAO_RESIDENCIA=get_regiao(CO_UF_RESIDENCIA),
REGIAO_PROVA=get_regiao(CO_UF_PROVA),
REGIAO_NASCIMENTO=get_regiao(CO_UF_NASCIMENTO))
#Verificando se está dentro dos conformes
levels(as.factor(df$REGIAO_NASCIMENTO))
levels(as.factor(df$REGIAO_PROVA))
levels(as.factor(df$REGIAO_RESIDENCIA))
notas <- df%>%
gather(key="PROVA",value="NOTA",NU_NOTA_MT,NU_NOTA_CN,
NU_NOTA_CH,NU_NOTA_LC,NU_NOTA_REDACAO)
notas_PRESENTE <- notas%>%filter(TP_PRESENCA_CN & TP_PRESENCA_CH
& TP_PRESENCA_LC & TP_PRESENCA_MT)
notas_PRESENTE$PROVA <- str_remove(notas_PRESENTE$PROVA,"NU_NOTA_")
ggplot(data=notas_PRESENTE)+
geom_boxplot(mapping=aes(x = PROVA,y = NOTA,fill=REGIAO_PROVA))
df%>%group_by(REGIAO_PROVA)%>%
summarise(media=mean(NU_NOTA_REDACAO,na.rm =T) ,
DezPiores=quantile(NU_NOTA_REDACAO,probs = 0.1, na.rm = T),
DezMelhores=quantile(NU_NOTA_REDACAO,probs = 0.9, na.rm = T),
ProporcaoPreocupante=sum(NU_NOTA_REDACAO>0 &
NU_NOTA_REDACAO<250,na.rm = T)/n())%>%
mutate(Gap90_10=DezMelhores-DezPiores)
ggplot(data=notas_PRESENTE)+
geom_boxplot(mapping=aes(x = fct_reorder(.f = SG_UF_PROVA,.x = NOTA, .fun = function(x){median(x,na.rm = T)}),
y = NOTA,fill=REGIAO_PROVA))+
xlab("Unidade Federativa")
df%>%group_by(SG_UF_PROVA)%>%
summarise(media=mean(NU_NOTA_REDACAO,na.rm =T) ,
DezPiores=quantile(NU_NOTA_REDACAO,probs = 0.1, na.rm = T),
DezMelhores=quantile(NU_NOTA_REDACAO,probs = 0.9, na.rm = T),
ProporcaoPreocupante=sum(NU_NOTA_REDACAO>0 &
NU_NOTA_REDACAO<250,na.rm = T)/n())%>%
mutate(Gap90_10=DezMelhores-DezPiores)%>%
arrange(Gap90_10)
df%>%group_by(SG_UF_PROVA)%>%
summarise(media=mean(NU_NOTA_REDACAO,na.rm =T) ,
DezPiores=quantile(NU_NOTA_REDACAO,probs = 0.1, na.rm = T),
DezMelhores=quantile(NU_NOTA_REDACAO,probs = 0.9, na.rm = T),
ProporcaoPreocupante=sum(NU_NOTA_REDACAO>0 &
NU_NOTA_REDACAO<250,na.rm = T)/n())%>%
mutate(Gap90_10=DezMelhores-DezPiores)%>%
arrange(Gap90_10,desc=T)
df%>%group_by(SG_UF_PROVA)%>%
summarise(media=mean(NU_NOTA_REDACAO,na.rm =T) ,
DezPiores=quantile(NU_NOTA_REDACAO,probs = 0.1, na.rm = T),
DezMelhores=quantile(NU_NOTA_REDACAO,probs = 0.9, na.rm = T),
ProporcaoPreocupante=sum(NU_NOTA_REDACAO>0 &
NU_NOTA_REDACAO<250,na.rm = T)/n())%>%
mutate(Gap90_10=DezMelhores-DezPiores)%>%
arrange(desc(Gap90_10))
df%>%group_by(SG_UF_PROVA)%>%
summarise(media=mean(NU_NOTA_REDACAO,na.rm =T) ,
DezPiores=quantile(NU_NOTA_REDACAO,probs = 0.1, na.rm = T),
DezMelhores=quantile(NU_NOTA_REDACAO,probs = 0.9, na.rm = T),
ProporcaoPreocupante=round(sum(NU_NOTA_REDACAO>0 &
NU_NOTA_REDACAO<250,na.rm = T)/n()),2)%>%
mutate(Gap90_10=DezMelhores-DezPiores)%>%
arrange(desc(Gap90_10))
df%>%group_by(SG_UF_PROVA)%>%
summarise(media=mean(NU_NOTA_REDACAO,na.rm =T) ,
DezPiores=quantile(NU_NOTA_REDACAO,probs = 0.1, na.rm = T),
DezMelhores=quantile(NU_NOTA_REDACAO,probs = 0.9, na.rm = T),
ProporcaoPreocupante=round(sum(NU_NOTA_REDACAO>0 &
NU_NOTA_REDACAO<250,na.rm = T)/n(),2))%>%
mutate(Gap90_10=DezMelhores-DezPiores)%>%
arrange(desc(Gap90_10))
df%>%group_by(SG_UF_PROVA)%>%
summarise(media=mean(NU_NOTA_REDACAO,na.rm =T) ,
DezPiores=quantile(NU_NOTA_REDACAO,probs = 0.1, na.rm = T),
DezMelhores=quantile(NU_NOTA_REDACAO,probs = 0.9, na.rm = T),
ProporcaoPreocupante=round(sum(NU_NOTA_REDACAO>0 &
NU_NOTA_REDACAO<250,na.rm = T)/n(),3))%>%
mutate(Gap90_10=DezMelhores-DezPiores)%>%
arrange(desc(Gap90_10))
ggplot(data=notas_PRESENTE%>%filter(SG_UF_RESIDENCIA%in%c("CE","GO","RJ")))+
geom_boxplot(mapping =aes(x=TP_DEPENDENCIA_ADM_ESC,y=NOTA,
fill=as.factor(TP_DEPENDENCIA_ADM_ESC)))+
facet_grid(.~SG_UF_RESIDENCIA)+
scale_fill_discrete(name="Administração da escola",labels = c("Federal","Estadual","Municipal","Privada"))+
theme(axis.text.x=element_blank())+xlab("Administração da escola")
ggplot(data=notas_PRESENTE%>%filter(SG_UF_RESIDENCIA%in%c("CE","GO","AC")))+
geom_boxplot(mapping =aes(x=TP_DEPENDENCIA_ADM_ESC,y=NOTA,
fill=as.factor(TP_DEPENDENCIA_ADM_ESC)))+
facet_grid(.~SG_UF_RESIDENCIA)+
scale_fill_discrete(name="Administração da escola",labels = c("Federal","Estadual","Municipal","Privada"))+
theme(axis.text.x=element_blank())+xlab("Administração da escola")
ggplot(data=notas_PRESENTE%>%filter(SG_UF_RESIDENCIA%in%c("CE","GO","RJ")))+
geom_boxplot(mapping =aes(x=TP_DEPENDENCIA_ADM_ESC,y=NOTA,
fill=as.factor(TP_DEPENDENCIA_ADM_ESC)))+
facet_grid(.~SG_UF_RESIDENCIA)+
scale_fill_discrete(name="Administração da escola",labels = c("Federal","Estadual","Municipal","Privada"))+
theme(axis.text.x=element_blank())+xlab("Administração da escola")
raca <- c("grey","beige",rgb(0.2,0.11,0.11),rgb(0.6,0.3,0.1),"yellow","red","blue")
df_or <- notas_PRESENTE%>%group_by(Q042,Q047)%>%summarise(media=mean(NOTA,na.rm=T),n=n())
df_or$Q042 <- ifelse(df_or$Q042=="A","Público",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="B","Público principal",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="C","Particular",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="D","Particular principal",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="E","Indígena",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="F","Indígena principal",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="G","Quilombola",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="H","Quilombola principal",df_or$Q042)
df_or$Q042 <- as.factor(df_or$Q042)
df_or$Q047 <- ifelse(df_or$Q047=="A","Público",df_or$Q047)
df_or$Q047 <- ifelse(df_or$Q047=="B","Público+Privado(s/bolsa)",df_or$Q047)
df_or$Q047 <- ifelse(df_or$Q047=="C","Público+Privado(c/bolsa)",df_or$Q047)
df_or$Q047 <- ifelse(df_or$Q047=="D","Privado s/bolsa",df_or$Q047)
df_or$Q047 <- ifelse(df_or$Q047=="E","Privado c/ bolsa",df_or$Q047)
df_or$Q047 <- as.factor(df_or$Q047)
ggplot(df_or)+
geom_point(mapping = aes(x = Q042,y=Q047,cex=media,color=media))+
scale_color_gradient(low = "white",high = "gold")+
geom_text(mapping = aes(x = Q042,y=Q047, label=round(media),hjust="left",vjust="top"),color=1)+
geom_text(mapping = aes(x = Q042,y=Q047, label=n,hjust="left",vjust="bottom"),color=rgb(0.3,0.3,0.4))+
guides(cex=F)+
xlab("Ensino Fundamental")+ylab("Ensino Médio")+
ggtitle("Nota média por escola (Legenda:nº de alunos e nota)")+
theme(axis.text.x = element_text(angle = 30, hjust = 1),
axis.text.y = element_text(angle = 30, hjust = 1))
df_or <- notas_PRESENTE%>%group_by(Q042,Q047)%>%
summarise(media=mean(NOTA,na.rm=T),n=n())
df_or$Q042 <- ifelse(df_or$Q042=="A","Público",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="B","Público principal",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="C","Particular",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="D","Particular principal",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="E","Indígena",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="F","Indígena principal",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="G","Quilombola",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="H","Quilombola principal",df_or$Q042)
df_or$Q042 <- as.factor(df_or$Q042)
df_or$Q047 <- ifelse(df_or$Q047=="A","Público",df_or$Q047)
df_or$Q047 <- ifelse(df_or$Q047=="B","Público+Privado(s/bolsa)",df_or$Q047)
df_or$Q047 <- ifelse(df_or$Q047=="C","Público+Privado(c/bolsa)",df_or$Q047)
df_or$Q047 <- ifelse(df_or$Q047=="D","Privado s/bolsa",df_or$Q047)
df_or$Q047 <- ifelse(df_or$Q047=="E","Privado c/ bolsa",df_or$Q047)
df_or$Q047 <- as.factor(df_or$Q047)
ggplot(df_or)+
geom_point(mapping = aes(x = Q042,y=Q047,cex=media,color=media))+
scale_color_gradient(low = "white",high = "gold")+
geom_text(mapping = aes(x = Q042,y=Q047,
label=round(media),hjust="left",vjust="top"),color=1)+
geom_text(mapping = aes(x = Q042,y=Q047,
label=n,hjust="left",vjust="bottom"),color="darkslategray")+
guides(cex=F)+
xlab("Ensino Fundamental")+ylab("Ensino Médio")+
ggtitle("Nota média por escola (Legenda:nº de alunos e nota)")+
theme(axis.text.x = element_text(angle = 30, hjust = 1),
axis.text.y = element_text(angle = 30, hjust = 1))
shiny::runApp('Documents/Lumini/Interactive_Analysis')
runApp('Documents/Lumini/Interactive_Analysis')
runApp('Documents/Lumini/Interactive_Analysis')
runApp('Documents/Lumini/Interactive_Analysis')
runApp('Documents/Lumini/Interactive_Analysis')
runApp('Documents/Lumini/Interactive_Analysis')
runApp('Documents/Lumini/Interactive_Analysis')
runApp('Documents/Lumini/Interactive_Analysis')
runApp('Documents/Lumini/Interactive_Analysis')
runApp('Documents/Lumini/Interactive_Analysis')
runApp('Documents/Lumini/Interactive_Analysis')
#####Escolher o diretório de trabalho
setwd("C:/Users/valej_000/Documents/Lumini/")
#Para ser reprodutível em qualquer computador, por favor
#escolha o diretório com os arquivos com a linha comentada abaixo
#choose.dir()
getwd()
#####Carregar as bibliotecas utilizadas no trabalho
#install.packages(c("tidyverse","polycor","corrplot","FactoMineR")
library(corrplot)
library(polycor)
library(tidyverse)
#####Carregar o arquivo
zip <- unz("sample_data/Microdados_Enem_2016.zip",filename = "Microdados_Enem_2016.csv")
df <- read_csv(zip)
#Como é possível segmentar os inscritos
#de forma clara e objetiva com o intuito
#de justificar investimentos em educação
#destinados a certas parcelas de alunos?
#Para tal, é preciso que haja alunos com bom desempenho mas com pouca verba
#Localização
#Origem racial
#Poder aquisitivo
#Deficiência
#As variáveis que dizem respeito ao quanto ganha está em:
##### Análise exploratória
get_regiao <- function(cod){
temp=vector(mode = "character",length = length(cod))
temp[substr(cod,1,1)=="1"]="N"
temp[substr(cod,1,1)=="2"]="NE"
temp[substr(cod,1,1)=="3"]="SE"
temp[substr(cod,1,1)=="4"]="S"
temp[substr(cod,1,1)=="5"]="CO"
return(as.factor(temp))
}
df2=df
df <- df%>%mutate(REGIAO_RESIDENCIA=get_regiao(CO_UF_RESIDENCIA),REGIAO_PROVA=get_regiao(CO_UF_PROVA),
REGIAO_NASCIMENTO=get_regiao(CO_UF_NASCIMENTO))
notas <- df%>%
gather(key="PROVA",value="NOTA",NU_NOTA_MT,NU_NOTA_CN,NU_NOTA_CH,NU_NOTA_LC,NU_NOTA_REDACAO)
notas_PRESENTE <- notas%>%filter(TP_PRESENCA_CN & TP_PRESENCA_CH
& TP_PRESENCA_LC & TP_PRESENCA_MT)
ggplot(data=notas_PRESENTE)+
geom_boxplot(mapping=aes(x = PROVA,y = NOTA,fill=REGIAO_RESIDENCIA))
df%>%group_by(REGIAO_PROVA)%>%summarise(média=mean(NU_NOTA_REDACAO,na.rm =T) ,
DezPiores=quantile(NU_NOTA_REDACAO,probs = 0.1, na.rm = T),
DezMelhores=quantile(NU_NOTA_REDACAO,probs = 0.9, na.rm = T),
ProporçãoPreocupante=sum(NU_NOTA_REDACAO>0 & NU_NOTA_REDACAO<250,na.rm = T)/n(),
n=n(),
Quant=sum(NU_NOTA_REDACAO>0 & NU_NOTA_REDACAO<250,na.rm = T))
ggplot(data=notas_PRESENTE)+
geom_boxplot(mapping=aes(x = fct_reorder(.f = SG_UF_PROVA,.x = NOTA, .fun = function(x){median(x,na.rm = T)}),
y = NOTA,fill=REGIAO_PROVA))+
xlab("Unidade Federativa")
runApp('Interactive_Analysis')
runApp('Interactive_Analysis')
faithful
bins <- seq(min(x), max(x), length.out = input$line + 1)
x    <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$line + 1)
runApp('Interactive_Analysis')
runApp('Interactive_Analysis')
ggplot(data=notas_PRESENTE)+
geom_boxplot(mapping=aes(x = PROVA,y = NOTA,fill=REGIAO_RESIDENCIA))
runApp('Interactive_Analysis')
nrow(df%>%filter(TP_SEXO=="[*]"))
nrow(df%>%filter(TP_SEXO=="*"))
nrow(df%>%filter(TP_SEXO=='*'))
nrow(df%>%filter(TP_SEXO=='[*]'))
nrow(df%>%filter(TP_SEXO=='[:alpha:]'))
nrow(df%>%filter(TP_SEXO==[:alpha:]))
nrow(df%>%filter(TP_SEXO%in%[:alpha:]))
nrow(df%>%filter(TP_SEXO%in%'[:alpha:]'))
runApp('Interactive_Analysis')
runApp('Interactive_Analysis')
notas_PRESENTE$PROVA
runApp('Interactive_Analysis')
runApp('Interactive_Analysis')
runApp('Interactive_Analysis')
colnames(notas_PRESENTE)
colnames(notas_PRESENTE)[112+25]
colnames(notas_PRESENTE)
runApp('Interactive_Analysis')
input$Questio
temp=notas_PRESENTE[,c(112+25,164,89)]
ggplot()+
geom_bar(mapping = aes(x =as.factor(temp[,2]),y = ..count..,position='fill',
fill=temp[,1]))+xlab(colnames(temp)[2])
ggplot()+
geom_bar(mapping = aes(x =temp[,2],y = ..count..,position='fill',
fill=temp[,1]))+xlab(colnames(temp)[2])
ggplot()+
geom_bar(mapping = aes(x =as.factor(temp[,2]),y = ..count..,position='fill',
fill=temp[,1]))+xlab(colnames(temp)[2])
ggplot()+
geom_bar(mapping = aes(x =as.factor(temp[,2]),position='fill',
fill=temp[,1]))+xlab(colnames(temp)[2])
ggplot()+
geom_bar(mapping = aes(x =temp[,2],position='fill',
fill=temp[,1]))+xlab(colnames(temp)[2])
ggplot()+
geom_bar(mapping = aes(x =temp[,2],fill=temp[,1]),position='fill')+
xlab(colnames(temp)[2])
temp
ggplot()+
geom_bar(mapping = aes(x =temp[,2],y=..count..,fill=temp[,1]),position='fill')+
xlab(colnames(temp)[2])
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut, fill = clarity), position = "fill")
diamonds$cut
colnames(temp)
ggplot(data=temp)+
geom_bar(mapping = aes(x =REGIAO_PROVA,fill=Q025),position='fill')+
xlab(colnames(temp)[2])
ggplot(data=temp)+
geom_bar(mapping = aes(x =REGIAO_PROVA,fill=Q025),position='fill')+
scale_fill_discrete(name="",labels=c("Não","Sim"))
ggplot(data=temp)+
geom_bar(mapping = aes(x =REGIAO_PROVA,fill=temp[,1]),position='fill')+
scale_fill_discrete(name="",labels=c("Não","Sim"))
ggplot(data=temp)+
geom_bar(mapping = aes(x =REGIAO_PROVA,fill=as.factor(temp[,1])),position='fill')+
scale_fill_discrete(name="",labels=c("Não","Sim"))
ggplot(data=temp)+
geom_bar(mapping = aes(x =REGIAO_PROVA,fill=as.factor(temp[[1]])),position='fill')+
scale_fill_discrete(name="",labels=c("Não","Sim"))
colnames(temp)
runApp('Interactive_Analysis')
colnames(notas_PRESENTE)[89]
runApp('Interactive_Analysis')
runApp('Interactive_Analysis')
runApp('Interactive_Analysis')
runApp('Dashboard')
getwd()
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/valej_000/Documents/Lumini/")
#Para ser reprodutível em qualquer computador, por favor escolha o diretório
#com a linha comentada abaixo. Esta pasta equivale ao caminho da pasta do GitHub.
#choose.dir()
getwd()
#####Carregar as bibliotecas utilizadas no trabalho
#install.packages(c("tidyverse","polycor","corrplot","FactoMineR")
library(corrplot)
library(polycor)
library(tidyverse)
zip <- unz("sample_data/Microdados_Enem_2016.zip",filename = "Microdados_Enem_2016.csv")
df <- read_csv(zip)
#View(df)
#summary(df)
#fix(df)
get_regiao <- function(cod){
temp=vector(mode = "character",length = length(cod))
temp[substr(cod,1,1)=="1"]="N"
temp[substr(cod,1,1)=="2"]="NE"
temp[substr(cod,1,1)=="3"]="SE"
temp[substr(cod,1,1)=="4"]="S"
temp[substr(cod,1,1)=="5"]="CO"
return(as.factor(temp))
}
df <- df%>%mutate(REGIAO_RESIDENCIA=get_regiao(CO_UF_RESIDENCIA),
REGIAO_PROVA=get_regiao(CO_UF_PROVA),
REGIAO_NASCIMENTO=get_regiao(CO_UF_NASCIMENTO))
#Verificando se está dentro dos conformes
levels(as.factor(df$REGIAO_NASCIMENTO))
levels(as.factor(df$REGIAO_PROVA))
levels(as.factor(df$REGIAO_RESIDENCIA))
notas <- df%>%
gather(key="PROVA",value="NOTA",NU_NOTA_MT,NU_NOTA_CN,
NU_NOTA_CH,NU_NOTA_LC,NU_NOTA_REDACAO)
notas_PRESENTE <- notas%>%filter(TP_PRESENCA_CN & TP_PRESENCA_CH
& TP_PRESENCA_LC & TP_PRESENCA_MT)
notas_PRESENTE$PROVA <- str_remove(notas_PRESENTE$PROVA,"NU_NOTA_")
ggplot(data=notas_PRESENTE)+
geom_boxplot(mapping=aes(x = PROVA,y = NOTA,fill=REGIAO_PROVA))
df%>%group_by(REGIAO_PROVA)%>%
summarise(media=mean(NU_NOTA_REDACAO,na.rm =T) ,
DezPiores=quantile(NU_NOTA_REDACAO,probs = 0.1, na.rm = T),
DezMelhores=quantile(NU_NOTA_REDACAO,probs = 0.9, na.rm = T),
EscritaDeficiente=sum(NU_NOTA_REDACAO>0 &
NU_NOTA_REDACAO<250,na.rm = T)/n())%>%
mutate(Gap90_10=DezMelhores-DezPiores)
ggplot(data=notas_PRESENTE)+
geom_boxplot(mapping=aes(x = fct_reorder(.f = SG_UF_PROVA,.x = NOTA,
.fun = function(x){median(x,na.rm = T)}),
y = NOTA,fill=REGIAO_PROVA))+
xlab("Unidade Federativa")
df%>%group_by(SG_UF_PROVA)%>%
summarise(media=mean(NU_NOTA_REDACAO,na.rm =T) ,
DezPiores=quantile(NU_NOTA_REDACAO,probs = 0.1, na.rm = T),
DezMelhores=quantile(NU_NOTA_REDACAO,probs = 0.9, na.rm = T),
EscritaDeficiente=round(sum(NU_NOTA_REDACAO>0 &
NU_NOTA_REDACAO<250,na.rm = T)/n(),3))%>%
mutate(Gap90_10=DezMelhores-DezPiores)%>%
arrange(desc(Gap90_10))
ggplot(data=notas_PRESENTE%>%filter(SG_UF_RESIDENCIA=="CE"))+
geom_boxplot(mapping =aes(x=TP_LOCALIZACAO_ESC,y=NOTA, fill=as.factor(TP_LOCALIZACAO_ESC)))+
xlab("")+
scale_fill_discrete(name="Zona da escola (CE)",labels = c("Urbano","Rural"))+
theme(axis.text.x=element_blank())
ggplot(data=notas_PRESENTE%>%filter(SG_UF_RESIDENCIA=="CE"))+
geom_boxplot(mapping =aes(x=TP_DEPENDENCIA_ADM_ESC,y=NOTA,
group=TP_DEPENDENCIA_ADM_ESC, fill=as.factor(TP_DEPENDENCIA_ADM_ESC)))+
scale_fill_discrete(name="Administração da escola",labels = c("Federal","Estadual","Privada"))+
theme(axis.text.x=element_blank())+xlab("Administração da escola")
ggplot(data=notas_PRESENTE%>%filter(SG_UF_RESIDENCIA%in%c("CE","GO","RJ")))+
geom_boxplot(mapping =aes(x=TP_DEPENDENCIA_ADM_ESC,y=NOTA,
fill=as.factor(TP_DEPENDENCIA_ADM_ESC)))+
facet_grid(.~SG_UF_RESIDENCIA)+
scale_fill_discrete(name="Administração da escola",
labels = c("Federal","Estadual","Municipal","Privada"))+
theme(axis.text.x=element_blank())+xlab("Administração da escola")
raca <- c("grey","beige",rgb(0.2,0.11,0.11),rgb(0.6,0.3,0.1),"yellow","red","blue")
ggplot(data=notas_PRESENTE)+
geom_boxplot(mapping =aes(x=PROVA,y=NOTA,fill=as.factor(TP_COR_RACA)),
colour=rgb(0.4,0.4,0.6))+
scale_color_manual(values = raca,aesthetics = "fill",
labels=c("N_declarou","Branca","Preta","Parda","Amarela","Indígena"),
name="Cor")
ggplot(data=notas_PRESENTE)+
geom_density(mapping =aes(x=NOTA,fill=TP_SEXO))+
facet_grid(TP_SEXO~PROVA)+
ggtitle("Distribuição das notas entre os sexos")
Q_PA <- df%>%select(Q001,Q002,Q003,Q004,Q005,Q006,Q007,Q008,Q009,Q010,Q011,Q012,
Q013,Q014,Q015,Q016,Q017,Q018,Q019,Q020,Q021,Q022,Q023,Q024,Q025)
for(i in colnames(Q_PA)){Q_PA[[i]] <- as.factor(Q_PA[[i]])}
cor <- matrix(rep(0,ncol(Q_PA)*ncol(Q_PA)),nrow = ncol(Q_PA),
dimnames = list(colnames(Q_PA)))
for(i in 1:ncol(Q_PA)){
for(j in 1:i){
cor[i,j]=ifelse(i==j,1,polycor::polychor(x = Q_PA[[i]],y = Q_PA[[j]]))
cor[j,i]=cor[i,j]
}
}
colnames(cor) <- colnames(Q_PA)
corrplot(cor,method = 'square', number.cex=0.7,order="hclust",addrect=6)
df_qpa <- df%>%select(NU_NOTA_CN,NU_NOTA_CH,NU_NOTA_LC,NU_NOTA_MT,NU_NOTA_REDACAO,
Q005, Q011, Q020, Q009, Q003, Q025)%>%
filter(!is.na(NU_NOTA_CN)&!is.na(NU_NOTA_MT) &!is.na(NU_NOTA_REDACAO))
lm_red <- lm(NU_NOTA_REDACAO~Q005+Q011+Q020+Q009+Q003+Q025,data = df_qpa)
lm_mt <- lm(NU_NOTA_MT~Q005+Q011+Q020+Q009+Q003+Q025,data = df_qpa)
s_red <- summary(lm_red)
s_mt <- summary(lm_mt)
tabela <- cbind(round(s_red$coefficients[,4],3),round(s_mt$coefficients[,4],3),
(s_red$coefficients[,4]<0.1 & s_mt$coefficients[,4]<0.1))
colnames(tabela) <- c("P-valor Redação","P-valor MT","Relevante?")
tabela
ggplot(data=notas_PRESENTE)+
geom_boxplot(mapping = aes(x = fct_reorder(.f = Q003,.x = NOTA,
.fun = function(x){median(x,na.rm = T)}),
y = NOTA,fill=Q003))+
xlab("Profissão do Pai")
ggplot(data=notas_PRESENTE)+
geom_boxplot(mapping = aes(x = as.factor(Q005),y = NOTA,fill=as.factor(Q005)))+
geom_hline(mapping = aes(yintercept=800),color="red")+
xlab("Número de pessoas morando com o candidato")+
theme(legend.position = 'none')
ggplot(data=notas_PRESENTE)+
geom_histogram(mapping = aes(x = NOTA,fill=as.factor(Q025)),bins=40)+
facet_grid(as.factor(Q025)~.)+
geom_vline(mapping = aes(xintercept=550),color="darkgrey")+
scale_fill_discrete(name="Internet?",labels=c("Não","Sim"))+
theme(strip.text.y =element_blank())
Q_mot <- df%>%select(NU_NOTA_MT,NU_NOTA_REDACAO,Q029,Q030,Q031,Q032,Q033,Q034,Q035,Q036,
Q037,Q038,Q039,Q040,Q041)%>%
filter(!is.na(NU_NOTA_MT) &!is.na(NU_NOTA_REDACAO))
lm3 <- lm(NU_NOTA_MT~Q029+Q030+Q031+Q032+Q033+Q034+Q035+Q036+Q037+Q038+Q039+Q040+Q041,
Q_mot)
summary(lm3)
df_or <- notas_PRESENTE%>%group_by(Q042,Q047)%>%
summarise(media=mean(NOTA,na.rm=T),n=n())
df_or$Q042 <- ifelse(df_or$Q042=="A","Público",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="B","Público principal",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="C","Particular",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="D","Particular principal",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="E","Indígena",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="F","Indígena principal",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="G","Quilombola",df_or$Q042)
df_or$Q042 <- ifelse(df_or$Q042=="H","Quilombola principal",df_or$Q042)
df_or$Q042 <- as.factor(df_or$Q042)
df_or$Q047 <- ifelse(df_or$Q047=="A","Público",df_or$Q047)
df_or$Q047 <- ifelse(df_or$Q047=="B","Público+Privado(s/bolsa)",df_or$Q047)
df_or$Q047 <- ifelse(df_or$Q047=="C","Público+Privado(c/bolsa)",df_or$Q047)
df_or$Q047 <- ifelse(df_or$Q047=="D","Privado s/bolsa",df_or$Q047)
df_or$Q047 <- ifelse(df_or$Q047=="E","Privado c/ bolsa",df_or$Q047)
df_or$Q047 <- as.factor(df_or$Q047)
ggplot(df_or)+
geom_point(mapping = aes(x = Q042,y=Q047,cex=media,color=media))+
scale_color_gradient(low = "white",high = "gold")+
geom_text(mapping = aes(x = Q042,y=Q047,
label=round(media),hjust="left",vjust="top"),color=1)+
geom_text(mapping = aes(x = Q042,y=Q047,
label=n,hjust="left",vjust="bottom"),color="darkslategray")+
guides(cex=F)+
xlab("Ensino Fundamental")+ylab("Ensino Médio")+
ggtitle("Nota média por escola (Legenda:nº de alunos e nota)")+
theme(axis.text.x = element_text(angle = 30, hjust = 1),
axis.text.y = element_text(angle = 30, hjust = 1))
